{"version":3,"sources":["../image sync /^/.//.*$","../image/Sinsegye.jpg","../image/avengers.jpg","../image/totoro-horizontal.jpg","components/Header/Header.js","components/PostWrapper/PostWrapper.js","services/post.js","components/Post/Post.js","services/users.js","actions/index.js","actions/ActionTypes.js","components/PopupMain/PopupMain.js","containers/PostContainer/PostContainer.js","containers/HeaderContainer/HeaderContainer.js","containers/Login/Login.js","containers/Signup/Signup.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["map","./Sinsegye.jpg","./avengers.jpg","./totoro-horizontal.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Header","_ref","children","react_default","a","createElement","className","PostWrapper","getPost","axios","get","Post","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","regen","console","warn","Promise","getMoives","then","asyncToGenerator","regenerator_default","mark","_callee","value","wrap","_context","prev","next","data","i","postGen","movie_title","movie_desc","movie_image","movie_rating","ConCheckForm","title","rentList","state","force","sent","setState","list","stop","_x","apply","arguments","IndividualCard","image","Card","centered","Image","src","Content","Description","rent","key","require","concat","window","innerWidth","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Popup","trigger","Rating","icon","defaultRating","maxRating","verticalAlign","Divider","vertical","handleChange","_ref2","handleChecked","_ref3","_ref4","_callee2","_context2","reduce","accumulator","index","array","hasOwnProperty","push","theater_name","movie_date","_x2","_ref5","_callee3","_context3","_x3","Fragment","Component","CheckForm","_ref6","_this2","handleSubmit","target","name","book","split","user_id","post","params","users","redux","_ref7","_callee4","_context4","t0","onAddBooks","alert","abrupt","_x4","_this3","_this$props","b","books","Form","Field","Radio","label","slice","checked","onChange","disabled","Array","isArray","includes","disable","Button","content","undefined","size","onClick","connect","dispatch","paramId","type","actions","PopupMain","closing","nextProps","visible","setTimeout","PostContainer","fetching","components_PostWrapper_PostWrapper","components_Post_Post","HeaderContainer","clickHandler","popupVisibility","PopupLabel","containers_Signup_Signup","close","login","onLogout","containers_Login_Login","nextState","log","JSON","stringify","onFetch","nextProp","dir","_value$data","_this$state","components_Header_Header","HeaderContainer_ButtonSet","components_PopupMain_PopupMain","ButtonSet","color","Icon","Meta","ConBookInfo","extra","Loader","active","inline","on","position","Group","BookInfo","hc","onRemove","checkUser","t","_this4","link","Login","password","error","fetchId","Reqid","ReqPassword","info","all","paramPassword","trueId","onLogin","changeHandler","defineProperty","signInHandler","preventDefault","elements_Header_Header","as","Subheader","onSubmit","Input","iconPosition","Label","basic","pointing","Signup","fetchSignUp","result","signUpHandler","App","containers_HeaderContainer_HeaderContainer","containers_PostContainer_PostContainer","Boolean","location","hostname","match","initState","userCtr","length","action","objectSpread","toConsumableArray","filter","store","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11688f6f.chunk.js","sourcesContent":["var map = {\n\t\"./Sinsegye.jpg\": 326,\n\t\"./avengers.jpg\": 327,\n\t\"./totoro-horizontal.jpg\": 328\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 325;","module.exports = __webpack_public_path__ + \"static/media/Sinsegye.2d3147ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avengers.177e9e0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-horizontal.bd276bcd.jpg\";","import React from 'react';\nimport './Header.css';\n\n\nconst Header = ({children}) => (\n    <div className=\"Header\">\n        Theater\n        {children}\n    </div>\n)\n\nexport default Header;\n","import React from 'react';\nimport './PostWrapper.css'\n\nconst PostWrapper = ({children}) => {\n    return (\n        <div className=\"PostWrapper\">\n            {children}\n        </div>\n    );\n};\n\nexport default PostWrapper;\n","import axios from 'axios';\n\nexport function getPost() {\n    return axios.get(`/api/post`);\n}\n\nexport function getRent() {\n    return axios.get(`/api/rent`)\n}\n\n","import React, { Component } from 'react';\nimport './Post.css';\nimport { Card, Image, Form, Radio, Segment, Grid, Button, Divider, Popup, Rating } from 'semantic-ui-react';\nimport * as getMoives from '../../services/post';\nimport * as users from '../../services/users';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\n\nclass Post extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            rentList: [],\n        }\n        Promise.resolve(getMoives.getRent())\n            .then(\n                async (value) => {\n                    const a = await value.data.reduce((accumulator, value, index, array) => {\n                        const title = value.movie_title;\n                        if (accumulator.hasOwnProperty(title)) {\n                            accumulator[title].push({ theater_name: value.theater_name, movie_date: value.movie_date })\n                        } else {\n                            accumulator[title] = [{ theater_name: value.theater_name, movie_date: value.movie_date }]\n                        }\n                        return accumulator;\n                    }, {})\n                    this.setState({\n                        rentList: a\n                    })\n                    console.warn(this.state.rentList);\n\n                }\n            )\n            .then(\n                Promise.resolve(getMoives.getPost())\n                    .then(\n                        async (value) => {\n                            console.warn(value);\n                            this.setState({\n                                value\n                            })\n                            const a = await value.data.map((a, i) => {\n                                let result = this.postGen(a.movie_title, a.movie_desc, a.movie_image, a.movie_rating,\n                                    <ConCheckForm title={a.movie_title} rentList={this.state.rentList} force={this.regen} />, i);\n                                return result;\n                            })\n\n                            this.setState({\n                                list: a\n                            })\n                        }\n                    )\n            )\n    }\n    regen = () =>{\n        console.warn('regen !!')\n        Promise.resolve(getMoives.getPost())\n        .then(\n            async (value) => {\n                console.warn(value);\n                const a = await value.data.map((a, i) => {\n                    let result = this.postGen(a.movie_title, a.movie_desc, a.movie_image, a.movie_rating,\n                        <ConCheckForm title={a.movie_title} rentList={this.state.rentList}value={this.state.value} force={this.regen} />, i);\n                    return result;\n                })\n\n                this.setState({\n                    list: a\n                })\n            }\n        )\n    }\n\n    IndividualCard = (movie_title, movie_desc, image) => (\n        <Card centered>\n            <Image src={image} />\n            <Card.Content>\n                <Card.Header>{movie_title}</Card.Header>\n                <Card.Description>\n                    {movie_desc}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    )\n\n    // IndividualBook = (title) => {\n    //     const data = this.state.rentList[title]\n\n    //     const b = data.map((a, i) => (\n    //         <Form.Field key={i}>\n    //             <Radio\n    //                 label={a.theater_name + \" \" + a.movie_date.slice(0, 10)}\n    //                 name='radioGroup'\n    //                 value={`${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n    //                 checked={this.handleChecked ? false : true}\n    //                 onChange={this.handleChange}\n    //             />\n    //         </Form.Field>\n\n    //     ))\n\n\n    //     return (\n    //         <Form >\n    //             <Form.Field>\n    //                 Selected value: <b>{this.state.value}</b>\n    //             </Form.Field>\n    //             {b}\n    //             <Button content='BOOK TICKETS' icon='film' size='big' />\n    //         </Form>\n\n\n    //     )\n    // }\n\n    /*\n     CREATE Trigger capacity_check_date After INSERT on rent \n     For Each Row Begin \n     DECLARE count INT; \n     DECLARE cap INT; \n     Set count = (SELECT count(*) From rent R where new.theater_name = r.theater_name and new.movie_date = r.movie_date); \n     Set cap = (SELECT capacity from theater t where new.theater_name=t.theater_name); \n     if count <= cap then \n     delete from rent where rent.theater_name= new.theater_name and rent.movie_title= new.movie_title and rent.movie_date=new.movie_date; \n     END IF; \n     END;$\n    */\n    // 예매  \n    /*\n \n    create table book(  user_id varchar(32), movie_title varchar(20), theater_name varchar(11), movie_date DATE NOT NULL, \n    Primary Key(user_id,movie_title,theater_name), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (theater_name,movie_title) REFERENCES rent(theater_name,movie_title));\n    FOREIGN KEY (movie_date) REFERENCES rent(movie_date));\n    */\n\n\n    postGen = (movie_title, movie_desc, movie_image, movie_rating, rent, key) => {\n        var image = require(`../../../image/${movie_image}`);\n        if (window.innerWidth > 766) {\n            return (\n                <Segment placeholder key={key}>\n                    <Grid columns={2} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Popup trigger={this.IndividualCard(movie_title, movie_desc, image)}>\n                                <Popup.Header>User Rating</Popup.Header>\n                                <Popup.Content>\n                                    <Rating icon='star' defaultRating={movie_rating} maxRating={4} />\n                                </Popup.Content>\n                            </Popup>\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle'>\n                            {rent}\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical></Divider>\n                </Segment>\n            )\n        } else {\n            return (\n                <Segment placeholder key={key}>\n                    <Popup trigger={this.IndividualCard(movie_title, movie_desc, image)}>\n                        <Popup.Header>User Rating</Popup.Header>\n                        <Popup.Content>\n                            <Rating icon='star' defaultRating={movie_rating} maxRating={4} />\n                        </Popup.Content>\n                    </Popup>\n                    {rent}\n                </Segment >\n            )\n        }\n    }\n\n    handleChange = (e, { value }) => {\n        this.setState({ value });\n    }\n\n    handleChecked = (e, { value }) => { return this.state.value === value; }\n\n    render() {\n        return (\n            <>\n                {this.state.list}\n            </>\n        );\n    }\n}\n\n\n\nclass CheckForm extends Component {\n    state = {\n        value: null\n    }\n\n    handleChange = (e, { value }) => {\n        this.setState({ value });\n    }\n\n    handleSubmit = (e) => {\n        if (e.target.name === \"submit\") {\n            if (this.state.value === null) return;\n            const book = this.state.value;\n            const movie_title = book.split(',')[0];\n            const theater_name = book.split(', ')[1];\n            const movie_date = book.split(', ')[2];\n            Promise.resolve(users.addBook(movie_title, theater_name, movie_date, this.props.redux.id))\n                .then(\n                    async (value) =>\n                        // console.dir(value)\n                        await (value.data !== 'exist') ?\n                            this.props.onAddBooks(this.state.value) : window.alert('Already Booked')\n                );\n\n\n        }\n    }\n\n\n    render() {\n        const { title, rentList } = this.props;\n\n        console.warn(rentList);\n        const data = rentList[title];\n        let b = null;\n        if (data) {\n            b = data.map((a, i) => {\n                let books;\n                if (this.props.redux) { books = this.props.redux.books; }\n                else { books = null; }\n                const disable = (books, value) => {\n                    if (Array.isArray(books))\n                        return books.includes(value)\n                    else\n                        return books === `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`\n                }\n                return (\n                    <Form.Field key={i}>\n                        < Radio\n                            label={a.theater_name + \" \" + a.movie_date.slice(0, 10)}\n                            name='radioGroup'\n                            value={`${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n                            checked={this.state.value === `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n                            onChange={this.handleChange}\n                            disabled={disable(books, `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`)}\n                        />\n                    </Form.Field>)\n\n            })\n\n        } else {\n            this.props.force();\n            b =<></>\n        }\n        return (\n            < Form >\n                <Form.Field>\n                    Selected value: <b>{this.state.value}</b>\n                </Form.Field>\n                {b}\n                <Button content='BOOK TICKETS' disabled={(this.props.redux === undefined)} icon='film' size='big' name=\"submit\" onClick={this.handleSubmit} />\n            </Form >\n        );\n    }\n}\nconst ConCheckForm = connect(state => ({ redux: state }), dispatch => ({\n    onAddBooks: (books) => {\n        dispatch(actions.add_books(books));\n        users.setBook(books);\n        //todo add db\n    }\n}))(CheckForm)\n\nexport default Post;\n","import axios from 'axios';\n\nexport function getID(paramId, paramPassword) {\n    return axios.get(`/api/id`, {\n        params: {\n            id: paramId,\n            password: paramPassword\n        }\n    });\n}\n\nexport function setID(paramId, paramPassword) {\n    return axios.post(`/api/id`, {\n        params: {\n            id: paramId,\n            password: paramPassword\n        }\n    });\n}\n\nexport function getBook(paramId) {\n    return axios.get(`/api/bookId`, {\n        params: {\n            id: paramId\n        }\n    });\n}\n\nexport function setBook(paramId) {\n    return axios.post(`/api/bookId`, {\n        params: {\n            id: paramId\n        }\n    });\n}\n\n\nexport function removeBook(movie_title, theater_name, movie_date, user_id) {\n    return axios.post(`/api/deleteB`, {\n        params: {\n            movie_title, theater_name, movie_date, user_id\n        }\n    });\n}\n\nexport function addBook(movie_title, theater_name, movie_date, user_id) {\n    return axios.post(`/api/addB`, {\n        params: {\n            movie_title, theater_name, movie_date, user_id\n        }\n    });\n}","import * as types from './ActionTypes';\n\nexport const login = (id) => ({ type: types.USER_LOGIN, id })\nexport const logout = () => ({ type: types.USER_LOGOUT })\nexport const fetch_books = (books) => ({ type: types.FETCH_BOOKS, books });\nexport const add_books = (books) => ({ type: types.ADD_BOOKS, books });\nexport const remove_books = (books) => ({ type: types.REMOVE_BOOKS, books });","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const FETCH_BOOKS = 'FETCH_BOOKS';\nexport const ADD_BOOKS = 'ADD_BOOKS';\nexport const REMOVE_BOOKS = 'REMOVE_BOOKS';","import React, { Component } from 'react';\nimport \"./PopupMain.css\";\n\nclass PopupMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            closing: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.visible && !nextProps.visible) {\n            // visible props is changing from true -> false\n\n            this.setState({\n                closing: true\n            });\n\n            // 1 sec after\n            setTimeout(\n                () => {\n                    this.setState({\n                        closing: false\n                    });\n                }, 1000\n            );\n        }\n    }\n\n\n    render() {\n        const { visible, children } = this.props;\n        const { closing } = this.state;\n\n        if (!visible && !closing) return null;\n        return (\n            <div className=\"Popup-wrapper\">\n                <div className={`Popup ${closing ? 'bounceOut' : 'bounceIn'} animated`}>\n                    {children}\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default PopupMain;","import React, { Component } from 'react';\nimport { PostWrapper, Post } from '../../components';\n\n\n\nclass PostContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetching: false, \n        };\n    }\n    render() {\n        return (\n            <PostWrapper>\n                <Post />\n            </PostWrapper >\n        );\n    }\n}\n\nexport default PostContainer;","import React, { Component } from 'react';\nimport { Header, PopupMain } from '../../components';\nimport { Login, Signup } from '../';\nimport { Button, Popup, Card, Icon, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport * as checkUser from '../../services/users';\n\nclass HeaderContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popupVisibility: false,\n            login: false,\n            PopupLabel: null,\n            id: null,\n            book: []\n\n        };\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const a = nextProps !== this.props;\n    //     const b = nextState.login !== this.state.login;\n    //     const c = nextState.book !== this.state.book;\n    //     const d = nextState.PopupLabel !== this.state.PopupLabel;\n    //     return b || d;\n    // }\n\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('componentWillUpdate');\n\n\n        if (this.props.redux)\n            if (JSON.stringify(this.props.redux.books) !== JSON.stringify(this.state.book)) {\n                this.props.onFetch(nextState.book);\n                console.log('redux changed');\n            }\n\n        if (JSON.stringify(this.state.book) !== JSON.stringify(nextState.book)) {\n            this.props.onFetch(nextState.book)\n            console.log('state book changed');\n        }\n\n    }\n\n    componentWillReceiveProps(nextProp) {\n\n        console.log('componentWillReceiveProps');\n        if (nextProp.redux) console.dir(nextProp.redux);\n        const { id } = nextProp.redux;\n        if (id != null) {\n            this.setState({\n                id,\n                login: true,\n                popupVisibility: false,\n            })\n\n            Promise.resolve(checkUser.getBook(id))\n                .then(value => {\n                    if (!value.data) {\n                        return\n                    }\n\n\n                    if (!Array.isArray(value.data)) {\n                        const { movie_title, theater_name, movie_date } = value.data;\n                        const book = `${movie_title}, ${theater_name}, ${movie_date.slice(0, 10)}`;\n                        if (JSON.stringify(this.state.book) !== JSON.stringify(book)) {\n                            this.setState({ book });\n                            console.log('h8');\n                        }\n                        // console.log('data not array');\n                    } else {\n                        // console.log('data is array');\n                        const book = value.data.map((a, i) => {\n                            const { movie_title, theater_name, movie_date } = a;\n                            return (\n                                `${movie_title}, ${theater_name}, ${movie_date.slice(0, 10)}`\n                            )\n                        })\n\n                        if (JSON.stringify(this.state.book) !== JSON.stringify(book)) {\n                            this.setState({ book });\n                            this.props.onFetch(book);\n                            console.log('h9');\n                        }\n                    }\n\n                })\n        }\n\n    }\n\n\n    clickHandler = (e) => {\n        if (e.target.name === 'close') {\n            this.setState({\n                popupVisibility: false\n            })\n        } else if (e.target.name === \"signup\") {\n            this.setState({\n                popupVisibility: true,\n                PopupLabel: < Signup close={this.clickHandler} />\n            })\n        } else if (e.target.name === \"logout\") {\n            this.setState({\n                id: null,\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    login: false,\n                });\n                this.props.onLogout();\n            }, 500);\n\n        }\n        else {\n            this.setState({\n                popupVisibility: true,\n                PopupLabel: <Login close={this.clickHandler} />\n            })\n        }\n    }\n\n    render() {\n\n        const { popupVisibility, PopupLabel } = this.state;\n        return (\n            <Header >\n                <ButtonSet login={this.state.login} id={this.state.id} clickHandler={this.clickHandler} book={this.state.book} />\n                < PopupMain visible={popupVisibility} >\n                    {PopupLabel}\n                </PopupMain>\n            </Header>\n        );\n    }\n}\n\n\n\nclass ButtonSet extends Component {\n    componentWillReceiveProps() {\n        console.log('ButtonSet R P');\n    }\n    componentWillUpdate() {\n        console.log('ButtonSet W U');\n    }\n    render() {\n        const { login, id, clickHandler, book } = this.props;\n        return (\n            login ? (\n                <>\n                    <Popup\n                        trigger={<Button content='MyStatus' icon=\"user\" color=\"teal\" />}\n                        content={\n                            <Card>\n                                <Card.Content>\n                                    <Card.Header>\n                                        <Icon name='user' />\n                                        Your ID :  {id}\n                                    </Card.Header>\n                                    <Card.Meta>\n                                        <span className='date'>Book List</span>\n                                    </Card.Meta>\n                                    <ConBookInfo book={book} user_id={id} />\n\n                                </Card.Content>\n                                <Card.Content extra>\n                                    <Button content='Log Out' name=\"logout\" onClick={clickHandler} color=\"teal\" />\n                                    {id ? <></> : <Loader active inline />}\n                                </Card.Content>\n                            </Card>\n                        }\n                        on='click'\n                        position='bottom right'\n                    />\n                </>\n\n            ) : (\n                    <Button.Group >\n                        <Button content='Sign in' name=\"signin\" onClick={clickHandler} color=\"teal\" />\n                        <Button content='Get started' name=\"signup\" onClick={clickHandler} color=\"teal\" />\n                    </Button.Group>\n                )\n        );\n    }\n};\n\n\n\nclass BookInfo extends Component {\n\n    hc = (book, key) => {\n\n        console.log(this.props.onRemove);\n        const movie_title = book.split(',')[0];\n        const theater_name = book.split(', ')[1];\n        const movie_date = book.split(', ')[2];\n        Promise.resolve(checkUser.removeBook(movie_title, theater_name, movie_date, this.props.user_id))\n            .then(\n                this.props.onRemove(book)\n            );\n\n    }\n\n    componentWillUpdate() {\n        console.log('Book info cwu');\n    }\n    componentWillReceiveProps() {\n        console.log('Book info cwrp');\n    }\n    render() {\n        const { book } = this.props;\n        let t;\n        if (Array.isArray(book)) {\n            t = book.map((a, i) => (\n                <Card.Description key={i}>\n                    {a}\n                    <Icon link name='close' onClick={() => this.hc(a, i)} />\n                </Card.Description>\n            ))\n        }\n\n        return (\n            <Card.Description>\n                {t ? t : book}\n            </Card.Description>\n        );\n    }\n\n}\n\nconst ConBookInfo = connect(null, dispatch => ({\n    onRemove: (book) => { dispatch(actions.remove_books(book)); console.log(book) }\n}))(BookInfo)\n\n\nexport default connect(state => ({ redux: state }), dispatch => ({\n    onLogout: () => dispatch(actions.logout()),\n    onFetch: (book) => dispatch(actions.fetch_books(book))\n}))(HeaderContainer);\n","import React, { Component } from 'react';\nimport { Form, Button, Header, Label, Icon } from 'semantic-ui-react';\nimport * as checkUser from '../../services/users';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\n\nclass Login extends Component {\n    state = {\n        id: null,\n        password: null,\n        fetching: false,\n        login: false,\n        error: false,\n    }\n\n\n    fetchId = async (Reqid, ReqPassword) => {\n        this.setState({\n            fetching: true // requesting..\n        });\n\n        try {\n            // wait for two promises\n            const info = await Promise.all([\n                checkUser.getID(Reqid, ReqPassword)\n            ]);\n\n            // Object destructuring Syntax,\n            // takes out required values and create references to them\n            const result = info[0].data;\n            if (result === 'OK') {\n                this.setState({ login: true, error: false, trueId: this.state.id });\n            this.props.onLogin(this.state.trueId)\n            }\n            else {\n                this.setState({ error: true });\n            }\n\n\n            this.setState({\n                fetching: false // done!\n            });\n\n        } catch (e) {\n            // if err, stop at this point\n            this.setState({\n                fetching: false\n            });\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    signInHandler = (e) => {\n\n        if (!e.target.name) return;\n        if (e.target.name === 'close') return;\n        this.fetchId(this.state.id, this.state.password);\n        e.preventDefault()\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n            <>\n                <Header as='h2' icon>\n                    <Icon name='user' />\n                    Member Login\n                    <Header.Subheader>Insert Your ID and PassWord</Header.Subheader>\n                </Header>\n                <Form name=\"form\" onSubmit={this.signInHandler}>\n                    {error\n                        ?\n                        <Form.Field className=\"Popup-Field\" error>\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                            <Label basic color='red' pointing>   Check Again </Label>\n                        </Form.Field>\n                        :\n                        <Form.Field className=\"Popup-Field\" >\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                        </Form.Field>\n                    }\n                    <Button className=\"Popup-Submit\" content='Sign in' color=\"teal\" type=\"submit\" />\n                    <Button content='Cancel' color=\"red\" name=\"close\" type=\"button\" onClick={this.props.close} />\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default connect(null, dispatch => ({\n    onLogin: (id) => dispatch(actions.login(id))\n}))(Login)","import React, { Component } from 'react';\nimport { Form, Button, Label, Icon, Header } from 'semantic-ui-react';\nimport * as checkUser from '../../services/users';\n\nclass Signup extends Component {\n    state = {\n        id: null,\n        password: null,\n        error: false,\n    }\n\n\n    fetchSignUp = async (Reqid, ReqPassword) => {\n        this.setState({\n            fetching: true // requesting..\n        });\n\n        try {\n            // wait for two promises\n            const info = await Promise.all([\n                checkUser.setID(Reqid, ReqPassword)\n            ]);\n\n            // Object destructuring Syntax,\n            // takes out required values and create references to them\n            const result = info[0].data;\n            console.log(result);\n            if (result === 'OK')\n                this.setState({ login: true, error: false });\n            else {\n                this.setState({ error: true });\n            }\n\n\n            this.setState({\n                fetching: false // done!\n            });\n\n        } catch (e) {\n            // if err, stop at this point\n            this.setState({\n                fetching: false\n            });\n        }\n    }\n\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        console.dir(this.state);\n    }\n\n    signUpHandler = (e) => {\n        console.log('signUpHandler');\n        console.log(e.target.name);\n        if (!e.target.name) return;\n        if (e.target.name === 'close') return;\n        this.fetchSignUp(this.state.id, this.state.password);\n        e.preventDefault()\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n            <>\n                <Header as='h2' icon>\n                    <Icon name='signup' />\n                    Create Account\n                  <Header.Subheader>Insert Your ID and PassWord</Header.Subheader>\n                </Header>\n                <Form name=\"form\" onSubmit={this.signUpHandler}>\n                    {error\n                        ? <Form.Field className=\"Popup-Field\" error>\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                            <Label basic color='red' pointing>   Check Again </Label>\n                        </Form.Field>\n                        :\n                        <Form.Field className=\"Popup-Field\">\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                        </Form.Field>\n                    }\n                    <Button className=\"Popup-Submit\" content='Sign in' color=\"teal\" type=\"submit\" />\n                    <Button content='Cancel' color=\"red\" name=\"close\" type=\"button\" onClick={this.props.close} />\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { PostContainer,HeaderContainer } from './containers';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderContainer />\n        <PostContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions/ActionTypes';\n\nconst initState = {\n    id: null,\n    books: []\n};\n\nconst userCtr = (state = initState, action) => {\n    switch (action.type) {\n        case types.USER_LOGIN:\n            return {\n                ...state,\n                id: action.id\n            }\n        case types.USER_LOGOUT:\n            return {\n                ...state,\n                id: null,\n                books: null\n            }\n        case types.FETCH_BOOKS:\n            return {\n                ...state,\n                books: action.books\n            }\n        case types.ADD_BOOKS:\n            return {\n                ...state,\n                books: [...state.books, action.books]\n            }\n        case types.REMOVE_BOOKS:\n            return {\n                ...state,\n                books: state.books.filter(action => action.books !== state.books)\n            }\n        default:\n            break;\n    }\n}\n\nexport default userCtr;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './Animation.css';\n\nimport { createStore } from 'redux';\nimport reducers from './reducers'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}