{"version":3,"sources":["../image sync /^/.//.*$","../image/Sinsegye.jpg","../image/avengers.jpg","../image/totoro-horizontal.jpg","components/Header/Header.js","components/PostWrapper/PostWrapper.js","components/Post/Post.js","services/post.js","services/users.js","actions/index.js","actions/ActionTypes.js","components/PopupMain/PopupMain.js","containers/PostContainer/PostContainer.js","containers/HeaderContainer/HeaderContainer.js","containers/Login/Login.js","containers/Signup/Signup.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["map","./Sinsegye.jpg","./avengers.jpg","./totoro-horizontal.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Header","_ref","children","react_default","a","createElement","className","PostWrapper","Post","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","IndividualCard","movie_title","movie_desc","image","Card","centered","Image","src","Content","Description","postGen","movie_image","movie_rating","rent","key","require","concat","window","innerWidth","Segment","placeholder","Grid","columns","relaxed","stackable","Column","Popup","trigger","Rating","icon","defaultRating","maxRating","verticalAlign","Divider","vertical","handleChange","value","setState","handleChecked","_ref2","state","list","rentList","Promise","axios","get","then","_ref3","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","data","reduce","accumulator","index","array","title","hasOwnProperty","push","theater_name","movie_date","sent","console","warn","stop","_x","apply","arguments","_ref4","_callee2","_context2","i","ConCheckForm","_x2","Fragment","Component","CheckForm","_ref5","_this2","handleSubmit","target","name","book","split","user_id","post","params","users","redux","_ref6","_callee3","_context3","t0","onAddBooks","alert","abrupt","_x3","_this3","_this$props","b","books","Form","Field","Radio","label","slice","checked","onChange","disabled","Array","isArray","includes","disable","Button","content","undefined","size","onClick","connect","dispatch","paramId","type","actions","PopupMain","closing","nextProps","visible","setTimeout","PostContainer","fetching","components_PostWrapper_PostWrapper","components_Post_Post","HeaderContainer","clickHandler","popupVisibility","PopupLabel","containers_Signup_Signup","close","login","onLogout","containers_Login_Login","nextState","log","JSON","stringify","onFetch","nextProp","dir","_value$data","_this$state","components_Header_Header","HeaderContainer_ButtonSet","components_PopupMain_PopupMain","ButtonSet","color","Icon","Meta","ConBookInfo","extra","Loader","active","inline","on","position","Group","BookInfo","hc","onRemove","checkUser","t","_this4","link","Login","password","error","fetchId","Reqid","ReqPassword","info","all","paramPassword","trueId","onLogin","changeHandler","defineProperty","signInHandler","preventDefault","elements_Header_Header","as","Subheader","onSubmit","Input","iconPosition","Label","basic","pointing","Signup","fetchSignUp","result","signUpHandler","App","containers_HeaderContainer_HeaderContainer","containers_PostContainer_PostContainer","Boolean","location","hostname","match","initState","userCtr","length","action","objectSpread","toConsumableArray","filter","store","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f792f05.chunk.js","sourcesContent":["var map = {\n\t\"./Sinsegye.jpg\": 326,\n\t\"./avengers.jpg\": 327,\n\t\"./totoro-horizontal.jpg\": 328\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 325;","module.exports = __webpack_public_path__ + \"static/media/Sinsegye.2d3147ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avengers.177e9e0b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/totoro-horizontal.bd276bcd.jpg\";","import React from 'react';\nimport './Header.css';\n\n\nconst Header = ({children}) => (\n    <div className=\"Header\">\n        Theater\n        {children}\n    </div>\n)\n\nexport default Header;\n","import React from 'react';\nimport './PostWrapper.css'\n\nconst PostWrapper = ({children}) => {\n    return (\n        <div className=\"PostWrapper\">\n            {children}\n        </div>\n    );\n};\n\nexport default PostWrapper;\n","import React, { Component } from 'react';\nimport './Post.css';\nimport { Card, Image, Form, Radio, Segment, Grid, Button, Divider, Popup, Rating } from 'semantic-ui-react';\nimport * as getMoives from '../../services/post';\nimport * as users from '../../services/users';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            rentList: [],\n        }\n        Promise.resolve(getMoives.getRent())\n            .then(\n                async (value) => {\n                    const a = await value.data.reduce((accumulator, value, index, array) => {\n                        const title = value.movie_title;\n                        if (accumulator.hasOwnProperty(title)) {\n                            accumulator[title].push({ theater_name: value.theater_name, movie_date: value.movie_date })\n                        } else {\n                            accumulator[title] = [{ theater_name: value.theater_name, movie_date: value.movie_date }]\n                        }\n                        return accumulator;\n                    }, {})\n                    this.setState({\n                        rentList: a\n                    })\n                    console.warn(this.state.rentList);\n\n                }\n            )\n            .then(\n                Promise.resolve(getMoives.getPost())\n                    .then(\n                        async (value) => {\n                            console.warn(value);\n                            const a = await value.data.map((a, i) => {\n                                let result = this.postGen(a.movie_title, a.movie_desc, a.movie_image, a.movie_rating,\n                                    <ConCheckForm title={a.movie_title} rentList={this.state.rentList} />, i);\n                                return result;\n                            })\n\n                            this.setState({\n                                list: a\n                            })\n                        }\n                    )\n            )\n    }\n\n\n\n    IndividualCard = (movie_title, movie_desc, image) => (\n        <Card centered>\n            <Image src={image} />\n            <Card.Content>\n                <Card.Header>{movie_title}</Card.Header>\n                <Card.Description>\n                    {movie_desc}\n                </Card.Description>\n            </Card.Content>\n        </Card>\n    )\n\n    // IndividualBook = (title) => {\n    //     const data = this.state.rentList[title]\n\n    //     const b = data.map((a, i) => (\n    //         <Form.Field key={i}>\n    //             <Radio\n    //                 label={a.theater_name + \" \" + a.movie_date.slice(0, 10)}\n    //                 name='radioGroup'\n    //                 value={`${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n    //                 checked={this.handleChecked ? false : true}\n    //                 onChange={this.handleChange}\n    //             />\n    //         </Form.Field>\n\n    //     ))\n\n\n    //     return (\n    //         <Form >\n    //             <Form.Field>\n    //                 Selected value: <b>{this.state.value}</b>\n    //             </Form.Field>\n    //             {b}\n    //             <Button content='BOOK TICKETS' icon='film' size='big' />\n    //         </Form>\n\n\n    //     )\n    // }\n\n    /*\n     CREATE Trigger capacity_check_date After INSERT on rent \n     For Each Row Begin \n     DECLARE count INT; \n     DECLARE cap INT; \n     Set count = (SELECT count(*) From rent R where new.theater_name = r.theater_name and new.movie_date = r.movie_date); \n     Set cap = (SELECT capacity from theater t where new.theater_name=t.theater_name); \n     if count <= cap then \n     delete from rent where rent.theater_name= new.theater_name and rent.movie_title= new.movie_title and rent.movie_date=new.movie_date; \n     END IF; \n     END;$\n    */\n    // 예매  \n    /*\n \n    create table book(  user_id varchar(32), movie_title varchar(20), theater_name varchar(11), movie_date DATE NOT NULL, \n    Primary Key(user_id,movie_title,theater_name), \n    FOREIGN KEY (user_id) REFERENCES users(user_id), \n    FOREIGN KEY (theater_name,movie_title) REFERENCES rent(theater_name,movie_title));\n    FOREIGN KEY (movie_date) REFERENCES rent(movie_date));\n    */\n\n\n    postGen = (movie_title, movie_desc, movie_image, movie_rating, rent, key) => {\n        var image = require(`../../../image/${movie_image}`);\n        if (window.innerWidth > 766) {\n            return (\n                <Segment placeholder key={key}>\n                    <Grid columns={2} relaxed='very' stackable>\n                        <Grid.Column>\n                            <Popup trigger={this.IndividualCard(movie_title, movie_desc, image)}>\n                                <Popup.Header>User Rating</Popup.Header>\n                                <Popup.Content>\n                                    <Rating icon='star' defaultRating={movie_rating} maxRating={4} />\n                                </Popup.Content>\n                            </Popup>\n                        </Grid.Column>\n\n                        <Grid.Column verticalAlign='middle'>\n                            {rent}\n                        </Grid.Column>\n                    </Grid>\n                    <Divider vertical></Divider>\n                </Segment>\n            )\n        } else {\n            return (\n                <Segment placeholder key={key}>\n                    <Popup trigger={this.IndividualCard(movie_title, movie_desc, image)}>\n                        <Popup.Header>User Rating</Popup.Header>\n                        <Popup.Content>\n                            <Rating icon='star' defaultRating={movie_rating} maxRating={4} />\n                        </Popup.Content>\n                    </Popup>\n                    {rent}\n                </Segment >\n            )\n        }\n    }\n\n    handleChange = (e, { value }) => {\n        this.setState({ value });\n    }\n\n    handleChecked = (e, { value }) => { return this.state.value === value; }\n\n    render() {\n        return (\n            <>\n                {this.state.list}\n            </>\n        );\n    }\n}\n\n\n\nclass CheckForm extends Component {\n    state = {\n        value: null\n    }\n\n    handleChange = (e, { value }) => {\n        this.setState({ value });\n    }\n\n    handleSubmit = (e) => {\n        if (e.target.name === \"submit\") {\n            if (this.state.value === null) return;\n            const book = this.state.value;\n            const movie_title = book.split(',')[0];\n            const theater_name = book.split(', ')[1];\n            const movie_date = book.split(', ')[2];\n            Promise.resolve(users.addBook(movie_title, theater_name, movie_date, this.props.redux.id))\n                .then(\n                    async (value) =>\n                        // console.dir(value)\n                        await (value.data !== 'exist') ?\n                            this.props.onAddBooks(this.state.value) : window.alert('Already Booked')\n                );\n\n\n        }\n    }\n\n\n    render() {\n        const { title, rentList } = this.props;\n\n        console.warn(rentList);\n        const data  = rentList[title];\n        let b = null;\n        if (data) {\n            b = data.map((a, i) => {\n                let books;\n                if (this.props.redux) { books = this.props.redux.books; }\n                else { books = null; }\n                const disable = (books, value) => {\n                    if (Array.isArray(books))\n                        return books.includes(value)\n                    else\n                        return books === `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`\n                }\n                return (\n                    <Form.Field key={i}>\n                        < Radio\n                            label={a.theater_name + \" \" + a.movie_date.slice(0, 10)}\n                            name='radioGroup'\n                            value={`${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n                            checked={this.state.value === `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`}\n                            onChange={this.handleChange}\n                            disabled={disable(books, `${title}, ${a.theater_name}, ${a.movie_date.slice(0, 10)}`)}\n                        />\n                    </Form.Field>)\n\n            })\n\n        } else {\n            b = <></>;\n        }\n        return (\n            < Form >\n                <Form.Field>\n                    Selected value: <b>{this.state.value}</b>\n                </Form.Field>\n                {b}\n                <Button content='BOOK TICKETS' disabled={(this.props.redux === undefined)} icon='film' size='big' name=\"submit\" onClick={this.handleSubmit} />\n            </Form >\n        );\n    }\n}\nconst ConCheckForm = connect(state => ({ redux: state }), dispatch => ({\n    onAddBooks: (books) => {\n        dispatch(actions.add_books(books));\n        users.setBook(books);\n        //todo add db\n    }\n}))(CheckForm)\n\nexport default Post;\n","import axios from 'axios';\n\nexport function getPost() {\n    return axios.get(`/api/post`);\n}\n\nexport function getRent() {\n    return axios.get(`/api/rent`)\n}\n\n","import axios from 'axios';\n\nexport function getID(paramId, paramPassword) {\n    return axios.get(`/api/id`, {\n        params: {\n            id: paramId,\n            password: paramPassword\n        }\n    });\n}\n\nexport function setID(paramId, paramPassword) {\n    return axios.post(`/api/id`, {\n        params: {\n            id: paramId,\n            password: paramPassword\n        }\n    });\n}\n\nexport function getBook(paramId) {\n    return axios.get(`/api/bookId`, {\n        params: {\n            id: paramId\n        }\n    });\n}\n\nexport function setBook(paramId) {\n    return axios.post(`/api/bookId`, {\n        params: {\n            id: paramId\n        }\n    });\n}\n\n\nexport function removeBook(movie_title, theater_name, movie_date, user_id) {\n    return axios.post(`/api/deleteB`, {\n        params: {\n            movie_title, theater_name, movie_date, user_id\n        }\n    });\n}\n\nexport function addBook(movie_title, theater_name, movie_date, user_id) {\n    return axios.post(`/api/addB`, {\n        params: {\n            movie_title, theater_name, movie_date, user_id\n        }\n    });\n}","import * as types from './ActionTypes';\n\nexport const login = (id) => ({ type: types.USER_LOGIN, id })\nexport const logout = () => ({ type: types.USER_LOGOUT })\nexport const fetch_books = (books) => ({ type: types.FETCH_BOOKS, books });\nexport const add_books = (books) => ({ type: types.ADD_BOOKS, books });\nexport const remove_books = (books) => ({ type: types.REMOVE_BOOKS, books });","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const FETCH_BOOKS = 'FETCH_BOOKS';\nexport const ADD_BOOKS = 'ADD_BOOKS';\nexport const REMOVE_BOOKS = 'REMOVE_BOOKS';","import React, { Component } from 'react';\nimport \"./PopupMain.css\";\n\nclass PopupMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            closing: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.visible && !nextProps.visible) {\n            // visible props is changing from true -> false\n\n            this.setState({\n                closing: true\n            });\n\n            // 1 sec after\n            setTimeout(\n                () => {\n                    this.setState({\n                        closing: false\n                    });\n                }, 1000\n            );\n        }\n    }\n\n\n    render() {\n        const { visible, children } = this.props;\n        const { closing } = this.state;\n\n        if (!visible && !closing) return null;\n        return (\n            <div className=\"Popup-wrapper\">\n                <div className={`Popup ${closing ? 'bounceOut' : 'bounceIn'} animated`}>\n                    {children}\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default PopupMain;","import React, { Component } from 'react';\nimport { PostWrapper, Post } from '../../components';\n\n\n\nclass PostContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetching: false, \n        };\n    }\n    render() {\n        return (\n            <PostWrapper>\n                <Post />\n            </PostWrapper >\n        );\n    }\n}\n\nexport default PostContainer;","import React, { Component } from 'react';\nimport { Header, PopupMain } from '../../components';\nimport { Login, Signup } from '../';\nimport { Button, Popup, Card, Icon, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport * as checkUser from '../../services/users';\n\nclass HeaderContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            popupVisibility: false,\n            login: false,\n            PopupLabel: null,\n            id: null,\n            book: []\n\n        };\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     const a = nextProps !== this.props;\n    //     const b = nextState.login !== this.state.login;\n    //     const c = nextState.book !== this.state.book;\n    //     const d = nextState.PopupLabel !== this.state.PopupLabel;\n    //     return b || d;\n    // }\n\n\n    componentWillUpdate(nextProps, nextState) {\n        console.log('componentWillUpdate');\n\n\n        if (this.props.redux)\n            if (JSON.stringify(this.props.redux.books) !== JSON.stringify(this.state.book)) {\n                this.props.onFetch(nextState.book);\n                console.log('redux changed');\n            }\n\n        if (JSON.stringify(this.state.book) !== JSON.stringify(nextState.book)) {\n            this.props.onFetch(nextState.book)\n            console.log('state book changed');\n        }\n\n    }\n\n    componentWillReceiveProps(nextProp) {\n\n        console.log('componentWillReceiveProps');\n        if (nextProp.redux) console.dir(nextProp.redux);\n        const { id } = nextProp.redux;\n        if (id != null) {\n            this.setState({\n                id,\n                login: true,\n                popupVisibility: false,\n            })\n\n            Promise.resolve(checkUser.getBook(id))\n                .then(value => {\n                    if (!value.data) {\n                        return\n                    }\n\n\n                    if (!Array.isArray(value.data)) {\n                        const { movie_title, theater_name, movie_date } = value.data;\n                        const book = `${movie_title}, ${theater_name}, ${movie_date.slice(0, 10)}`;\n                        if (JSON.stringify(this.state.book) !== JSON.stringify(book)) {\n                            this.setState({ book });\n                            console.log('h8');\n                        }\n                        // console.log('data not array');\n                    } else {\n                        // console.log('data is array');\n                        const book = value.data.map((a, i) => {\n                            const { movie_title, theater_name, movie_date } = a;\n                            return (\n                                `${movie_title}, ${theater_name}, ${movie_date.slice(0, 10)}`\n                            )\n                        })\n\n                        if (JSON.stringify(this.state.book) !== JSON.stringify(book)) {\n                            this.setState({ book });\n                            this.props.onFetch(book);\n                            console.log('h9');\n                        }\n                    }\n\n                })\n        }\n\n    }\n\n\n    clickHandler = (e) => {\n        if (e.target.name === 'close') {\n            this.setState({\n                popupVisibility: false\n            })\n        } else if (e.target.name === \"signup\") {\n            this.setState({\n                popupVisibility: true,\n                PopupLabel: < Signup close={this.clickHandler} />\n            })\n        } else if (e.target.name === \"logout\") {\n            this.setState({\n                id: null,\n            })\n\n            setTimeout(() => {\n                this.setState({\n                    login: false,\n                });\n                this.props.onLogout();\n            }, 500);\n\n        }\n        else {\n            this.setState({\n                popupVisibility: true,\n                PopupLabel: <Login close={this.clickHandler} />\n            })\n        }\n    }\n\n    render() {\n\n        const { popupVisibility, PopupLabel } = this.state;\n        return (\n            <Header >\n                <ButtonSet login={this.state.login} id={this.state.id} clickHandler={this.clickHandler} book={this.state.book} />\n                < PopupMain visible={popupVisibility} >\n                    {PopupLabel}\n                </PopupMain>\n            </Header>\n        );\n    }\n}\n\n\n\nclass ButtonSet extends Component {\n    componentWillReceiveProps() {\n        console.log('ButtonSet R P');\n    }\n    componentWillUpdate() {\n        console.log('ButtonSet W U');\n    }\n    render() {\n        const { login, id, clickHandler, book } = this.props;\n        return (\n            login ? (\n                <>\n                    <Popup\n                        trigger={<Button content='MyStatus' icon=\"user\" color=\"teal\" />}\n                        content={\n                            <Card>\n                                <Card.Content>\n                                    <Card.Header>\n                                        <Icon name='user' />\n                                        Your ID :  {id}\n                                    </Card.Header>\n                                    <Card.Meta>\n                                        <span className='date'>Book List</span>\n                                    </Card.Meta>\n                                    <ConBookInfo book={book} user_id={id} />\n\n                                </Card.Content>\n                                <Card.Content extra>\n                                    <Button content='Log Out' name=\"logout\" onClick={clickHandler} color=\"teal\" />\n                                    {id ? <></> : <Loader active inline />}\n                                </Card.Content>\n                            </Card>\n                        }\n                        on='click'\n                        position='top right'\n                    />\n                </>\n\n            ) : (\n                    <Button.Group >\n                        <Button content='Sign in' name=\"signin\" onClick={clickHandler} color=\"teal\" />\n                        <Button content='Get started' name=\"signup\" onClick={clickHandler} color=\"teal\" />\n                    </Button.Group>\n                )\n        );\n    }\n};\n\n\n\nclass BookInfo extends Component {\n\n    hc = (book, key) => {\n\n        console.log(this.props.onRemove);\n        const movie_title = book.split(',')[0];\n        const theater_name = book.split(', ')[1];\n        const movie_date = book.split(', ')[2];\n        Promise.resolve(checkUser.removeBook(movie_title, theater_name, movie_date, this.props.user_id))\n            .then(\n                this.props.onRemove(book)\n            );\n\n    }\n\n    componentWillUpdate() {\n        console.log('Book info cwu');\n    }\n    componentWillReceiveProps() {\n        console.log('Book info cwrp');\n    }\n    render() {\n        const { book } = this.props;\n        let t;\n        if (Array.isArray(book)) {\n            t = book.map((a, i) => (\n                <Card.Description key={i}>\n                    {a}\n                    <Icon link name='close' onClick={() => this.hc(a, i)} />\n                </Card.Description>\n            ))\n        }\n\n        return (\n            <Card.Description>\n                {t ? t : book}\n            </Card.Description>\n        );\n    }\n\n}\n\nconst ConBookInfo = connect(null, dispatch => ({\n    onRemove: (book) => { dispatch(actions.remove_books(book)); console.log(book) }\n}))(BookInfo)\n\n\nexport default connect(state => ({ redux: state }), dispatch => ({\n    onLogout: () => dispatch(actions.logout()),\n    onFetch: (book) => dispatch(actions.fetch_books(book))\n}))(HeaderContainer);\n","import React, { Component } from 'react';\nimport { Form, Button, Header, Label, Icon } from 'semantic-ui-react';\nimport * as checkUser from '../../services/users';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\n\nclass Login extends Component {\n    state = {\n        id: null,\n        password: null,\n        fetching: false,\n        login: false,\n        error: false,\n    }\n\n\n    fetchId = async (Reqid, ReqPassword) => {\n        this.setState({\n            fetching: true // requesting..\n        });\n\n        try {\n            // wait for two promises\n            const info = await Promise.all([\n                checkUser.getID(Reqid, ReqPassword)\n            ]);\n\n            // Object destructuring Syntax,\n            // takes out required values and create references to them\n            const result = info[0].data;\n            if (result === 'OK') {\n                this.setState({ login: true, error: false, trueId: this.state.id });\n            this.props.onLogin(this.state.trueId)\n            }\n            else {\n                this.setState({ error: true });\n            }\n\n\n            this.setState({\n                fetching: false // done!\n            });\n\n        } catch (e) {\n            // if err, stop at this point\n            this.setState({\n                fetching: false\n            });\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    signInHandler = (e) => {\n\n        if (!e.target.name) return;\n        if (e.target.name === 'close') return;\n        this.fetchId(this.state.id, this.state.password);\n        e.preventDefault()\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n            <>\n                <Header as='h2' icon>\n                    <Icon name='user' />\n                    Member Login\n                    <Header.Subheader>Insert Your ID and PassWord</Header.Subheader>\n                </Header>\n                <Form name=\"form\" onSubmit={this.signInHandler}>\n                    {error\n                        ?\n                        <Form.Field className=\"Popup-Field\" error>\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                            <Label basic color='red' pointing>   Check Again </Label>\n                        </Form.Field>\n                        :\n                        <Form.Field className=\"Popup-Field\" >\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                        </Form.Field>\n                    }\n                    <Button className=\"Popup-Submit\" content='Sign in' color=\"teal\" type=\"submit\" />\n                    <Button content='Cancel' color=\"red\" name=\"close\" type=\"button\" onClick={this.props.close} />\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default connect(null, dispatch => ({\n    onLogin: (id) => dispatch(actions.login(id))\n}))(Login)","import React, { Component } from 'react';\nimport { Form, Button, Label, Icon, Header } from 'semantic-ui-react';\nimport * as checkUser from '../../services/users';\n\nclass Signup extends Component {\n    state = {\n        id: null,\n        password: null,\n        error: false,\n    }\n\n\n    fetchSignUp = async (Reqid, ReqPassword) => {\n        this.setState({\n            fetching: true // requesting..\n        });\n\n        try {\n            // wait for two promises\n            const info = await Promise.all([\n                checkUser.setID(Reqid, ReqPassword)\n            ]);\n\n            // Object destructuring Syntax,\n            // takes out required values and create references to them\n            const result = info[0].data;\n            console.log(result);\n            if (result === 'OK')\n                this.setState({ login: true, error: false });\n            else {\n                this.setState({ error: true });\n            }\n\n\n            this.setState({\n                fetching: false // done!\n            });\n\n        } catch (e) {\n            // if err, stop at this point\n            this.setState({\n                fetching: false\n            });\n        }\n    }\n\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n        console.dir(this.state);\n    }\n\n    signUpHandler = (e) => {\n        console.log('signUpHandler');\n        console.log(e.target.name);\n        if (!e.target.name) return;\n        if (e.target.name === 'close') return;\n        this.fetchSignUp(this.state.id, this.state.password);\n        e.preventDefault()\n    }\n\n    render() {\n        const { error } = this.state;\n        return (\n            <>\n                <Header as='h2' icon>\n                    <Icon name='signup' />\n                    Create Account\n                  <Header.Subheader>Insert Your ID and PassWord</Header.Subheader>\n                </Header>\n                <Form name=\"form\" onSubmit={this.signUpHandler}>\n                    {error\n                        ? <Form.Field className=\"Popup-Field\" error>\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                            <Label basic color='red' pointing>   Check Again </Label>\n                        </Form.Field>\n                        :\n                        <Form.Field className=\"Popup-Field\">\n                            <Form.Input icon='user' iconPosition='left' label='Username' placeholder='Username' name=\"id\" onChange={e => this.changeHandler(e)} />\n                            <Form.Input icon='key' iconPosition='left' label='Password' placeholder='Password' name=\"password\" onChange={e => this.changeHandler(e)} type=\"password\" />\n                        </Form.Field>\n                    }\n                    <Button className=\"Popup-Submit\" content='Sign in' color=\"teal\" type=\"submit\" />\n                    <Button content='Cancel' color=\"red\" name=\"close\" type=\"button\" onClick={this.props.close} />\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport { PostContainer,HeaderContainer } from './containers';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <HeaderContainer />\n        <PostContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions/ActionTypes';\n\nconst initState = {\n    id: null,\n    books: []\n};\n\nconst userCtr = (state = initState, action) => {\n    switch (action.type) {\n        case types.USER_LOGIN:\n            return {\n                ...state,\n                id: action.id\n            }\n        case types.USER_LOGOUT:\n            return {\n                ...state,\n                id: null,\n                books: null\n            }\n        case types.FETCH_BOOKS:\n            return {\n                ...state,\n                books: action.books\n            }\n        case types.ADD_BOOKS:\n            return {\n                ...state,\n                books: [...state.books, action.books]\n            }\n        case types.REMOVE_BOOKS:\n            return {\n                ...state,\n                books: state.books.filter(action => action.books !== state.books)\n            }\n        default:\n            break;\n    }\n}\n\nexport default userCtr;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './Animation.css';\n\nimport { createStore } from 'redux';\nimport reducers from './reducers'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers);\n\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}